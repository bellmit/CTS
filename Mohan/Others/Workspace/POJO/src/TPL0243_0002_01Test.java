
import java.text.SimpleDateFormat;
import java.util.Date;

import junit.framework.TestCase;

import com.xerox.enterprise.ghs.mmis.rif.common.exception.RIFException;
import com.xerox.enterprise.ghs.mmis.rif.core.RulesContext;
import com.xerox.enterprise.ghs.mmis.rif.core.RulesResult;
import com.xerox.enterprise.ghs.mmis.rif.core.api.RulesManager;

/**
 * The class <code>TPL0243_0002_01Test</code> contains tests for the class
 * {@link <code>TPL0243_0002_01</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 11/25/14 8:19 PM
 *
 * @author 396662
 *
 * @version $Revision$
 */
public class TPL0243_0002_01Test extends TestCase {

	private boolean flag;

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public TPL0243_0002_01Test(String name) {
		super(name);
	}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = false
 * createTestStubs = false
 * methods = 
 * package = 
 * package.sourceFolder = MMIS_RIF_Rules/src
 * superclassType = junit.framework.TestCase
 * testCase = TPL0243_0002_01Test
 * testClassType = com.xerox.enterprise.ghs.mmis.rif.rules.automation.enterprise.TPL0243_0002_01
 */
public void testExecute() throws RIFException {	
     
    //Rule Invocation Context object holds object arrays used in rule execution.
	  			    //Name of the rule to be executed.
	    String ruleId = "TPL0243.0002.01";
	    RulesContext ric = new RulesContext();
	    //Adding object into rule invocation context.
	 	ric.addObject("12/01/2011");
		boolean result = false;
		ric.addObject(result);
		ric.addObject("12/01/2001");
		ric.addObject(new SimpleDateFormat("MM/dd/yyyy"));
				    			
	  RulesManager rulesManager = RulesManager.getRIFInstance();
    
    //Invoke RIF with rulename and rule invocation objects.
	  			    RulesResult rulesResult = null;
	                
    try {
           						rulesResult = rulesManager.execute(ruleId, ric);	
			  					  						result=rulesResult.isReturnBooleanValue(); 
			                } catch (RIFException re){
			                	re.printStackTrace();
    }
	  					if (!rulesResult.isReturnBooleanValue()) {
			  flag = false;
			}
	  		System.out.println("Rule boolean"+rulesResult.isReturnBooleanValue());
			assertTrue(rulesResult.isReturnBooleanValue());
	   	}	
    
}

